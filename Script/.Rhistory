imputed_total <- mice(total, m=2, maxit = 2, seed = 500,
method = ifelse(colTypes == "factor", "rf", "cart"))
md.pattern(total)
apply(total, 2, function(x) sum(is.na(x)))
nacount = apply(total, 2, function(x) sum(is.na(x)))
rm(nacount)
na_count = sort(apply(total, 2, function(x) sum(is.na(x))))
na_count = sort(apply(total, 2, function(x) sum(is.na(x))), decreasing = T)
head(na_count)
head(na_count,20)
dim(total)
na_train_count = sort(apply(train, 2, function(x) sum(is.na(x))), decreasing = T)
na_test_count = sort(apply(test, 2, function(x) sum(is.na(x))), decreasing = T)
head(na_train_count, 10)
head(na_test_count, 10)
head(na_test_count, 30)
imputed_total <- mice(total, m=2, maxit = 2, seed = 500,
method = "fastpmm")
train[13117,]
train[13117,]$kitch_sq
train[13117,]$build_year
dim(total)
rm(list = ls())
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
test = read.csv("../Data/test.csv")
rownames(test) = test$id
test = test[,-1]
sm_train = summary(train)
price_log2 = log2(train$price_doc)
hist(price_log2)
summary(price_log2)
summary(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
q1
q3
log2(quantile(train$price_doc, .25))
high = q3 + (q3-q1)*1.5
low = q1 - (q3-q1)*1.5
high
low
q1 = quantile(train$price_doc, .25)
q3 = quantile(train$price_doc, .75)
high = q3 + (q3-q1)*1.5
low = q1 - (q3-q1)*1.5
high
low
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*1.5
low = q1 - (q3-q1)*1.5
2^high
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
rmind = train$life_sq > train$full_sq
table(rmind)
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
test = read.csv("../Data/test.csv")
rownames(test) = test$id
test = test[,-1]
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*2
low = q1 - (q3-q1)*2
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
test = read.csv("../Data/test.csv")
rownames(test) = test$id
test = test[,-1]
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
rmind = train$life_sq > train$full_sq
summary(price_log2)
summary(log2(train$price_doc))
rm(rmind)
ind = train$life_sq > train$full_sq
train[ind,]$life_sq = NA
train[ind,"life_sq"] = NA
train[ind,"life_sq"]
ind = train$life_sq > train$full_sq
table(ind)
train[ind,"life_sq"]
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
ind = train$life_sq > train$full_sq
train[ind,"life_sq"]
ind
ind = which(train$life_sq > train$full_sq)
ind
train[ind,"life_sq"] = NA
ind = which(test$life_sq > test$full_sq)
test[ind,"life_sq"] = NA
train[which(train$life_sq < 5),"life_sq"] = NA
test[which(test$life_sq < 5),"life_sq"] = NA
train[which(train$full_sq < 5),"full_sq"] = NA
test[which(test$full_sq < 5),"full_sq"] = NA
train[13117, c("kitch_sq", "build_year")]
hist(train$kitch_sq)
plot(train$kitch_sq)
summary(train$kitch_sq)
plot(sort((train$kitch_sq))
)
plot(sort((train$kitch_sq)), ylim = c(0,100))
plot(sort((train$kitch_sq)), ylim = c(0,10))
train[which(train$kitch_sq < 5),"kitch_sq"] = NA
test[which(test$kitch_sq < 5),"kitch_sq"] = NA
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
ind = which(train$life_sq > train$full_sq)
train[ind,"life_sq"] = NA
ind = which(test$life_sq > test$full_sq)
test[ind,"life_sq"] = NA
train[which(train$life_sq < 5),"life_sq"] = NA
test[which(test$life_sq < 5),"life_sq"] = NA
train[which(train$full_sq < 5),"full_sq"] = NA
test[which(test$full_sq < 5),"full_sq"] = NA
train[which(train$kitch_sq < 3),"kitch_sq"] = NA
test[which(test$kitch_sq < 3),"kitch_sq"] = NA
hist(train$life_sq)
hist(train$full_sq)
plot(sort(train$full_sq))
plot(train$full_sq, train$life_sq)
plot(test$full_sq, test$life_sq)
total = rbind(train[,-ncol(train)], test)
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
total = rbind(train[,-ncol(train)], test)
total[which(total$life_sq > total$full_sq),"life_sq"] = NA
total[which(total$life_sq < 5),"life_sq"] = NA
total[which(total$full_sq < 5),"full_sq"] = NA
total[which(total$kitch_sq < 3),"kitch_sq"] = NA
plot(total$life_sq, total$full_sq)
plot(total$full_sq, total$life_sq)
abline(c(0,.3))
abline(c(0,.7))
plot(total$full_sq, total$life_sq, xlim=c(0,1000), ylim=c(0,1000))
total[total$full_sq > 1000,c("full_sq", "life_sq")]
total[which(total$full_sq > 1000),c("full_sq", "life_sq")]
plot(train$full_sq, train$price_doc)
plot(train$full_sq, train$price_doc, log="y")
plot(train$full_sq, train$price_doc, log="y", xlim=c(0,1000))
22/.7
total[which(total$full_sq > 1000), "full_sq"] = 53.26
plot(total$full_sq, total$life_sq)
abline(c(0,.3))
total[which(total$full_sq > 150 & total$life_sq /total$full_sq < 0.3), "full_sq"] = NA
plot(total$full_sq, total$life_sq)
summary(total$product_type)
summary(total$build_year)
plot(sort(total$build_year))
table(total$build_year > 2020)
total[which(total$build_year > 2020), "build_year"]
total[which(total$build_year > 2010), "build_year"]
total[which(total$build_year > 2015), "build_year"]
total[which(total$build_year > 2017), "build_year"]
total[which(total$build_year > 2020), "build_year"] = NA
total[which(total$build_year <1970), "build_year"]
total[which(total$build_year <1960), "build_year"]
total[which(total$build_year <1950), "build_year"]
total[which(total$build_year <1930), "build_year"]
total[which(total$build_year <1900), "build_year"]
plot(total[which(total$build_year <1900), "build_year"])
plot(total[which(total$build_year <1600), "build_year"])
total[which(total$build_year < 1600), "build_year"] = NA
summary(total$num_room)
plot(sort(total$num_room))
total[which(total$num_room == 0), "num_room"] = NA
total[c(10076, 11621, 17764, 19390, 24007, 26713, 29172), "num_room"] = NA
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
total = rbind(train[,-ncol(train)], test)
total[which(total$life_sq > total$full_sq),"life_sq"] = NA
total[which(total$life_sq < 5),"life_sq"] = NA
total[which(total$full_sq < 5),"full_sq"] = NA
total[which(total$kitch_sq < 3),"kitch_sq"] = NA
total[which(total$full_sq > 1000), "full_sq"] = 53.26
total[which(total$full_sq > 150 & total$life_sq /total$full_sq < 0.3), "full_sq"] = NA
total[which(total$build_year > 2020), "build_year"] = NA
total[which(total$build_year < 1600), "build_year"] = NA
total[which(total$num_room == 0), "num_room"] = NA
total[c(10076, 11621, 17764, 19390, 24007, 26713, 29172), "num_room"]
plot(sort(total$num_room))
plot(sort(total$floor))
summary((total$floor))
summary((total$max_floor))
plot(sort(total$max_floor))
total[which(total$floor == 0), "floor"] = NA
total[which(total$max_floor == 0), "max_floor"] = NA
total[which(total$floor> total$max_floor), "max_floor"] = NA
plot(total$max_floor, total$floor)
total[which(total$max_floor > 60), "max_floor"] = NA
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
total = rbind(train[,-ncol(train)], test)
total[which(total$life_sq > total$full_sq),"life_sq"] = NA
total[which(total$life_sq < 5),"life_sq"] = NA
total[which(total$full_sq < 5),"full_sq"] = NA
total[which(total$kitch_sq < 3),"kitch_sq"] = NA
total[which(total$full_sq > 1000), "full_sq"] = 53.26
total[which(total$full_sq > 150 & total$life_sq /total$full_sq < 0.3), "full_sq"] = NA
total[which(total$build_year > 2020), "build_year"] = NA
total[which(total$build_year < 1600), "build_year"] = NA
total[which(total$num_room == 0), "num_room"] = NA
total[which(total$floor == 0), "floor"] = NA
total[which(total$floor> total$max_floor), "max_floor"] = NA
summary(total$state)
plot(sort(total$state))
total[which(total$state == 33), "state"] = NA
date(1990)
date()
as.Date(1990)
as.Date()
?as.Date()
total$timestamp[0]
total$timestamp[1]
total$timestamp = as.character(total$timestamp)
total$timestamp[1]
as.Date(total$timestamp[1])
typeof(as.Date(total$timestamp[1]))
typeof(total$timestamp[1])
total$timestamp = as.Date(as.character(total$timestamp))
total$dayofweek = weekdays(total$timestamp)
table(total$dayofweek)
table(months(total$timestamp))
total$month = months(total$timestamp)
weekdays.POSIXt(total$timestamp[1])
library(lubridate)
install.packages("lubridate")
library(lubridate)
date(total$timestamp[1])
weel(total$timestamp[1])
week(total$timestamp[1])
week(total$timestamp[2])
total$week = week(total$timestamp)
table(total$week)
day(total$week)
day(total$timestamp)
table(day(total$timestamp))
table(yday(total$timestamp))
total$dayofyear =yday(total$timestamp)
total$dayofmonth =day(total$timestamp)
total$week =NULL
table(week(total$timestamp))
total$weekofyear = week(total$timestamp)
total$rel_floor = total$floor / total$max_floor
total$rel_kitch_sq = total$kitch_sq / total$full_sq
total$rel_life_sq = total$life_sq / total$full_sq
total$name = paste(total$sub_area, total$metro_km_avto)
total$avg_room_sq = total$full_sq / total$num_room
train_new = total[1:nrow(train)]
train_new = total[1:nrow(train),]
test_new = total[(nrow(train)+1):nrow(total),]
colnames(train_new)
write.csv(train_new, "../Data/train_new.csv", row.names = F, quote = F)
write.csv(test_new, "../Data/test_new.csv", row.names = F, quote = F)
rm(list = ls())
train = read.csv("../Data/train_new.csv", stringsAsFactors = T)
test = read.csv("../Data/test_new.csv", stringsAsFactors = T)
rownames(train) = train$id
rownames(test) = test$id
train = train[,-1]
test = test[,-1]
macro = read.csv("../Data/macro_impute.csv")
library(lubridate)
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
train$price_doc[price_log2 > high] = 2^high
train$price_doc[price_log2 < low] = 2^low
hist(log2(train$price_doc))
total = rbind(train[,-ncol(train)], test)
total[which(total$life_sq > total$full_sq),"life_sq"] = NA
total[which(total$life_sq < 5),"life_sq"] = NA
total[which(total$full_sq < 5),"full_sq"] = NA
total[which(total$kitch_sq < 3),"kitch_sq"] = NA
total[which(total$full_sq > 1000), "full_sq"] = 53.26
total[which(total$full_sq > 150 & total$life_sq /total$full_sq < 0.3), "full_sq"] = NA
total[which(total$build_year > 2020), "build_year"] = NA
total[which(total$build_year < 1600), "build_year"] = NA
total[which(total$num_room == 0), "num_room"] = NA
total[which(total$floor == 0), "floor"] = NA
total[which(total$floor> total$max_floor), "max_floor"] = NA
total[which(total$state == 33), "state"] = NA
total$timestamp = as.Date(as.character(total$timestamp))
total$dayofyear =yday(total$timestamp)
total$dayofmonth =day(total$timestamp)
total$dayofweek = weekdays(total$timestamp)
total$weekofyear = week(total$timestamp)
total$month = months(total$timestamp)
total$rel_floor = total$floor / total$max_floor
total$rel_kitch_sq = total$kitch_sq / total$full_sq
total$rel_life_sq = total$life_sq / total$full_sq
total$name = paste(total$sub_area, total$metro_km_avto)
total$avg_room_sq = total$full_sq / total$num_room
train_new = total[1:nrow(train),]
test_new = total[(nrow(train)+1):nrow(total),]
library(lubridate)
train = read.csv("../Data/train.csv")
test = read.csv("../Data/test.csv")
hist(log2(train$price_doc))
sm_train = summary(train)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
price_log2[price_log2 > high] = 2^high
price_log2[price_log2 < low] = 2^low
hist(log2(train$price_doc))
hist(price_log2)
summary(price_log2)
price_log2 = log2(train$price_doc)
q1 = quantile(price_log2, .25)
q3 = quantile(price_log2, .75)
high = q3 + (q3-q1)*3
low = q1 - (q3-q1)*3
price_log2[price_log2 > high] = high
price_log2[price_log2 < low] = low
hist(log2(train$price_doc))
hist(price_log2)
total = rbind(train[,-ncol(train)], test)
total[which(total$life_sq > total$full_sq),"life_sq"] = NA
total[which(total$life_sq < 5),"life_sq"] = NA
total[which(total$full_sq < 5),"full_sq"] = NA
total[which(total$kitch_sq < 3),"kitch_sq"] = NA
total[which(total$full_sq > 1000), "full_sq"] = 53.26
total[which(total$full_sq > 150 & total$life_sq /total$full_sq < 0.3), "full_sq"] = NA
total[which(total$build_year > 2020), "build_year"] = NA
total[which(total$build_year < 1600), "build_year"] = NA
total[which(total$num_room == 0), "num_room"] = NA
total[which(total$floor == 0), "floor"] = NA
total[which(total$floor> total$max_floor), "max_floor"] = NA
total[which(total$state == 33), "state"] = NA
total$timestamp = as.Date(as.character(total$timestamp))
total$dayofyear =yday(total$timestamp)
total$dayofmonth =day(total$timestamp)
total$dayofweek = weekdays(total$timestamp)
total$weekofyear = week(total$timestamp)
total$month = months(total$timestamp)
total$rel_floor = total$floor / total$max_floor
total$rel_kitch_sq = total$kitch_sq / total$full_sq
total$rel_life_sq = total$life_sq / total$full_sq
total$name = paste(total$sub_area, total$metro_km_avto)
total$avg_room_sq = total$full_sq / total$num_room
train_new = total[1:nrow(train),]
train_new = cbind(train_new, 2^price_log2)
test_new = total[(nrow(train)+1):nrow(total),]
write.csv(train_new, "../Data/train_new.csv", row.names = F, quote = F)
write.csv(test_new, "../Data/test_new.csv", row.names = F, quote = F)
rm(list = ls())
library(caTools)
library(caret)
library(xgboost)
train = read.csv("../Data/train_new.csv", stringsAsFactors = T)
test = read.csv("../Data/test_new.csv", stringsAsFactors = T)
rownames(train) = train$id
rownames(test) = test$id
train = train[,-1]
test = test[,-1]
macro = read.csv("../Data/macro_impute.csv")
dim(train)
dim(test)
train[1:5,1:5]
total = rbind(train[,-ncol(train)], test)
total = merge(total, macro)
dim(total)
total = merge(total, macro, by = "timestamp")
dim(total)
total = rbind(train[,-ncol(train)], test)
total = merge(total, macro, by = "timestamp")
dim(total)
dim(macro)
train_price = train[,ncol(train)]
train = total[1:nrow(train),]
test = total[-c(1:nrow(train)),]
total[1:5,1:5]
total = total[,-1]
train = total[1:nrow(train),]
test = total[-c(1:nrow(train)),]
dim(train)
dim(test)
train[1:5,1:5]
colTypes = sapply(1:ncol(total), function(i) class(total[,i]))
table(colTypes)
total_factors = total[, colTypes == "factor"]
head(total_factors)
train = read.csv("../Data/train_new.csv", stringsAsFactors = T)
test = read.csv("../Data/test_new.csv", stringsAsFactors = T)
rownames(train) = train$id
rownames(test) = test$id
train = train[,-1]
test = test[,-1]
train_price = train[,ncol(train)]
macro = read.csv("../Data/macro_impute.csv")
total = rbind(train[,-ncol(train)], test)
total = merge(total, macro, by = "timestamp")
head(total[,c("timestamp", "x")])
colnames(total)
head(total[,c("timestamp", "X")])
macro[1:5,1:5]
macro = read.csv("../Data/macro_impute.csv")
total = rbind(train[,-ncol(train)], test)
total = merge(total, macro, by = "timestamp")
dim(total)
total = rbind(train[,-ncol(train)], test)
dim(total)
macro = read.csv("../Data/macro_impute.csv")
macro[1:5,1:5]
load("C:/XIANGGU/Socket/SRHM/Script/impute.RData")
macro_impute[1:5,1:5]
macro_impute = complete(imputed_Data, 1)
macro_impute[1:5,1:5]
write.csv(cbind(timestamp = rownames(macro_impute),
macro_impute),
"../Data/macro_impute.csv", row.names = F, quote = F)
macro = read.csv("../Data/macro_impute.csv")
macro_impute[1:5,1:5]
rm(list =ls())
library(caTools)
library(caret)
library(xgboost)
train = read.csv("../Data/train_new.csv", stringsAsFactors = T)
test = read.csv("../Data/test_new.csv", stringsAsFactors = T)
rownames(train) = train$id
rownames(test) = test$id
train = train[,-1]
test = test[,-1]
train_price = train[,ncol(train)]
macro = read.csv("../Data/macro_impute.csv")
macro = read.csv("../Data/macro_impute.csv", row.names = F)
macro = read.table("../Data/macro_impute.csv", row.names = F)
macro = read.table("../Data/macro_impute.csv")
macro[1:5,1:5]
macro = read.table("../Data/macro_impute.csv", sep = ",")
