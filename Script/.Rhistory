library(caTools)
library(rpart)
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
ind_na = apply(train, 2, function(x) any(is.na(x)))
train_noNA = train[,!ind_na]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
datTrain = train_noNA[split,]
fit <- glm(price_doc ~ .,data=datTrain)
pred = predict(fit, datTest[,1:289])
dim(datTest)
pred = predict(fit, datTest)
datTest$timestamp = factor(datTest$timestamp, levels = levels(train$timestamp))
datTrain$timestamp = factor(datTrain$timestamp, levels = levels(train$timestamp))
fit <- glm(price_doc ~ .,data=datTrain)
pred = predict(fit, datTest)
summary(datTest$timestamp)
summary(datTrain$timestamp)
setdiff(levels(datTrain$timestamp), levels(datTest$timestamp)
)
setdiff(levels(datTest$timestamp), levels(datTrain$timestamp))
"2011-09-16" %in% datTest$timestamp
"2011-09-16" %in% datTrain$timestamp
gsub("-[:digit:]","","2011-09-16")
gsub("-[[:digit:]]","","2011-09-16")
gsub("\\-[:digit:]","","2011-09-16")
gsub("[:digit:]","","2011-09-16")
gsub("[:digits:]","","2011-09-16")
gsub("[:digit:]","","2011-09-16")
gsub("[9]","","2011-09-16")
gsub("-.*","","2011-09-16")
gsub("[:digit:].*","","2011-09-16")
gsub([:digit:],"","2011-09-16")
gsub("[:digit:]","","20110916")
gsub("[[:digit:]]","","2011-09-16")
gsub("-[[:digit:]]","","2011-09-16")
gsub("-[[:digit:]]{2}","","2011-09-16")
gsub("-([[:digit:]]{2})$","","2011-09-16")
gsub("-([[:digit:]]{1,})$","","2011-09-16")
gsub("-([[:digit:]]{1,})$","",train$timestamp)
table(gsub("-([[:digit:]]{1,})$","",train$timestamp))
train$timestamp = factor(gsub("-([[:digit:]]{1,})$","",train$timestamp))
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
train$timestamp = factor(gsub("-([[:digit:]]{1,})$","",train$timestamp))
ind_na = apply(train, 2, function(x) any(is.na(x)))
train_noNA = train[,!ind_na]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
# datTest$timestamp = factor(datTest$timestamp, levels = levels(train$timestamp))
datTrain = train_noNA[split,]
# datTrain$timestamp = factor(datTrain$timestamp, levels = levels(train$timestamp))
setdiff(datTest$timestamp, datTrain$timestamp)
setdiff(datTrain$timestamp, datTest$timestamp)
fit <- glm(price_doc ~ .,data=datTrain)
pred = predict(fit, datTest)
pred
summary((pred - datTest$price_doc)^2)
summary(sqrt(sum((pred - datTest$price_doc)^2)))
sqrt(sum((pred - datTest$price_doc)^2)/nrow(datTest))
summary(train$price_doc)
test = read.csv("../Data/test.csv")
test$timestamp = factor(gsub("-([[:digit:]]{1,})$","",test$timestamp))
test = test[,ind_na]
pred = predict(fit, test)
summary(fit)
pred1 = predict(fit, datTest)
sf = summary(fit)
sf$coefficients
sf
"product_type" %in% colnames(test)
dim(test)
dim(train)
colnames(train)
colnames(test)
all(colnames(test) %in% colnames(train))
train = train[,colnames(test)]
ind_na = apply(train, 2, function(x) any(is.na(x)))
sum(ind_na)
train_noNA = train[,!ind_na]
test = test[,ind_na]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
# datTest$timestamp = factor(datTest$timestamp, levels = levels(train$timestamp))
datTrain = train_noNA[split,]
# datTrain$timestamp = factor(datTrain$timestamp, levels = levels(train$timestamp))
fit <- glm(price_doc ~ .,data=datTrain)
sf = summary(fit)
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
train$timestamp = factor(gsub("-([[:digit:]]{1,})$","",train$timestamp))
test = read.csv("../Data/test.csv")
test$timestamp = factor(gsub("-([[:digit:]]{1,})$","",test$timestamp))
train = train[,c(colnames(test), "price_doc")]
ind_na = apply(train, 2, function(x) any(is.na(x)))
train_noNA = train[,!ind_na]
test = test[,ind_na]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
# datTest$timestamp = factor(datTest$timestamp, levels = levels(train$timestamp))
datTrain = train_noNA[split,]
# datTrain$timestamp = factor(datTrain$timestamp, levels = levels(train$timestamp))
fit <- glm(price_doc ~ .,data=datTrain)
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
train$timestamp = factor(gsub("-([[:digit:]]{1,})$","",train$timestamp))
test = read.csv("../Data/test.csv")
test$timestamp = factor(gsub("-([[:digit:]]{1,})$","",test$timestamp))
train = train[,c(colnames(test), "price_doc")]
c(colnames(test), "price_doc")
test = read.csv("../Data/test.csv")
test$timestamp = factor(gsub("-([[:digit:]]{1,})$","",test$timestamp))
dim(test)
fit
ind_na = apply(train, 2, function(x) any(is.na(x)))
train_noNA = train[,!ind_na]
test = test[,ind_na]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
datTrain = train_noNA[split,]
fit <- glm(price_doc ~ .,data=datTrain)
sf = summary(fit)
pred = predict(fit, test)
dim(test)
test = read.csv("../Data/test.csv")
test$timestamp = factor(gsub("-([[:digit:]]{1,})$","",test$timestamp))
pred = predict(fit, test)
train_noNA = train_noNA[,-c("timestamp")]
train_noNA = train_noNA[,-1]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
# datTest$timestamp = factor(datTest$timestamp, levels = levels(train$timestamp))
datTrain = train_noNA[split,]
# datTrain$timestamp = factor(datTrain$timestamp, levels = levels(train$timestamp))
fit <- glm(price_doc ~ .,data=datTrain)
sf = summary(fit)
pred = predict(fit, test)
head(pred)
test[1:5,1:5]
summary(pred)
write.csv(cbind(id = test$id,
price_doc = pred),
"baseline_eval.csv", row.names = F)
pred[pred < 0] = 0
pred = predict(fit, test)
pred[is.na(pred)] = 0
pred[pred < 0] = 0
write.csv(cbind(id = test$id,
price_doc = pred),
"baseline_eval.csv", row.names = F)
?rpart
train = read.csv("../Data/train.csv")
rownames(train) = train$id
train = train[,-1]
# train$timestamp = factor(gsub("-([[:digit:]]{1,})$","",train$timestamp))
test = read.csv("../Data/test.csv")
# test$timestamp = factor(gsub("-([[:digit:]]{1,})$","",test$timestamp))
# train = train[,c(colnames(test), "price_doc")]
# ind_na = apply(train, 2, function(x) any(is.na(x)))
# train_noNA = train[,!ind_na]
train_noNA = train[,-1]
# test = test[,ind_na]
set.seed(88)
split = sample.split(train_noNA$price_doc, SplitRatio = 0.7)
datTest = train_noNA[!split,]
# datTest$timestamp = factor(datTest$timestamp, levels = levels(train$timestamp))
datTrain = train_noNA[split,]
# datTrain$timestamp = factor(datTrain$timestamp, levels = levels(train$timestamp))
tree = rpart(formula = price_doc ~ ., data=datTrain,
parms = list(split  = "information"), method="anova",
control = rpart.control(minsplit = 50))
pred1 = predict(fit, datTest)
return(sqrt(sum((log(pred+1) - log(real + 1))^2)/length(pred)))
ef = function(pred, real) {
return(sqrt(sum((log(pred+1) - log(real + 1))^2)/length(pred)))
}
ef(predict(fit, datTest),  datTest$price_doc)
ef = function(pred, real) {
pred[is.na(pred)] = mean(real)
return(sqrt(sum((log(pred+1) - log(real + 1))^2)/length(pred)))
}
ef(predict(fit, datTest),  datTest$price_doc)
summary(predict(fit, datTest))
ef = function(pred, real) {
pred[is.na(pred)] = mean(real)
pred[pred < 0] = min(real)
return(sqrt(sum((log(pred+1) - log(real + 1))^2)/length(pred)))
}
ef(predict(fit, datTest),  datTest$price_doc)
pred = predict(fit, test)
pred[is.na(pred)] = mean(train$price_doc)
pred[pred < 0] = min(train$price_doc)
write.csv(cbind(id = test$id,
price_doc = pred),
"baseline_tree_eval.csv", row.names = F)
plotcp(tree)
treePrune<- prune(tree, cp= tree$cptable[which.min(tree$cptable[,"xerror"]),"CP"])
ef(predict(treePrune, datTest),  datTest$price_doc)
ef(predict(fit, datTest),  datTest$price_doc)
pred = predict(fit, test)
pred[is.na(pred)] = mean(train$price_doc)
pred[pred < 0] = min(train$price_doc)
write.csv(cbind(id = test$id,
price_doc = pred),
"baseline_tree_eval.csv", row.names = F)
pred = predict(treePrune, test)
pred[is.na(pred)] = mean(train$price_doc)
pred[pred < 0] = min(train$price_doc)
write.csv(cbind(id = test$id,
price_doc = pred),
"baseline_treePrune_eval.csv", row.names = F)
